server {
  listen 80;
  listen [::]:80;
  server_name localhost;

    # Vite

  # Vite
  location /hmr/ {
    proxy_pass              http://front:8080/hmr/;

  }

  location / {
    proxy_pass              http://front:3000/;


    # Proxy headers
    ##
    # Comes from: https://github.com/sapphi-red/vite-setup-catalogue/tree/main/examples/with-proxy


    ##########                                                                                                    ##########
    #  With all the following configurations, we're trying to fight this bug: https://github.com/vitejs/vite/issues/10105  #
    ##########                                                                                                    ##########

    proxy_buffering           off; # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering
    proxy_ignore_client_abort on;  # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_client_abort
    proxy_socket_keepalive    on;  # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_socket_keepalive

    # Disable all caches
    # See https://ubiq.co/tech-blog/disable-nginx-cache/
    proxy_cache_bypass                 1;
    proxy_no_cache                     1; # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_no_cache
    # kill cache
    add_header Cache-Control           'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    if_modified_since                  off;
    expires                            off;
    etag                               off;

    # Proxy timeouts
    ##
    # Set to a super low value on purpose:
    #   when the connection to Vite fails because of https://github.com/vitejs/vite/issues/10105, we fail the connection to the browser.
    #   It's not perfect but as a developer, it's a better UX to see the loading fail quickly than to wait for tens of seconds for the same failure.
    proxy_connect_timeout              1s;
  }
  location = /backusers/ {
    proxy_pass              http://users/;
  }
  location = /backmovies/ {
    proxy_pass              http://movies/;
  }
  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
  }
} # End of Docker Nginx reverse proxy example file
version: '3.7'

services:
  traefik:
    container_name: traefik
    image: traefik:v2.7
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"

    ports:
      - "80:80"
      - "8080:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.api.rule=Host(`traefik.dev.neuvy.eu`)"
      - "traefik.http.routers.api.service=api@internal"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik-data/traefik.yml:/traefik.yml:ro
      - ./traefik-data/acme.json:/acme.json
      - ./traefik-data/configurations:/configurations

  front:
    container_name: front
    image: appfront:latest
    command:  [sh, -c, "npm install && npm run dev"]
    expose:
      - 3000
      - 3333
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - users
      - movies
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.entrypoints=web"
      - "traefik.http.routers.front.rule=Host(`front.dev.neuvy.eu`)"
      - "traefik.http.routers.front.service=front"
      - "traefik.http.services.front.loadbalancer.server.port=3000"
  users:
    container_name: users
    build: ./backend
    depends_on:
      - db
    command: uvicorn users.main:app --reload --workers 1 --host 0.0.0.0 --port 80
    volumes:
      - ./backend/users:/usr/src/users
      - ./backend/bdd:/usr/src/bdd
    expose:
      - 80
    ports:
      - 8004:80
    environment:
      - ENVIRONMENT=dev
      - TESTING=0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users.entrypoints=web"
      - "traefik.http.routers.users.rule=Host(`users.dev.neuvy.eu`) && (PathPrefix(`/`) && !Path(`/users/login`))"
      - "traefik.http.routers.users.service=users"
      - "traefik.http.routers.users.middlewares=my-jwt-validation-middleware@file"
      - "traefik.http.services.users.loadbalancer.server.port=80"
      - "traefik.http.routers.login.rule=Host(`users.dev.neuvy.eu`) && Path(`/users/login`)"
      - "traefik.http.routers.login.service=users"
  movies:
    container_name: movies
    build: ./backend
    depends_on:
      - db
    command: uvicorn movies.main:app --reload --workers 1 --host 0.0.0.0 --port 80
    volumes:
      - ./backend/movies:/usr/src/movies
    expose:
      - 80
    ports:
      - 8005:80
    environment:
      - ENVIRONMENT=dev
      - TESTING=0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.movies.entrypoints=web"
      - "traefik.http.routers.movies.rule=Host(`movies.dev.neuvy.eu`)"
      - "traefik.http.routers.movies.service=movies"
      - "traefik.http.services.movies.loadbalancer.server.port=80"
      - "traefik.http.routers.movies.middlewares=my-jwt-validation-middleware@file"
  teams:
    container_name: teams
    build: ./backend
    depends_on:
      - db
    command: uvicorn teams.main:app --reload --workers 1 --host 0.0.0.0 --port 80
    volumes:
      - ./backend/teams:/usr/src/teams
    expose:
      - 80
    ports:
      - 8006:80
    environment:
      - ENVIRONMENT=dev
      - TESTING=0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.teams.entrypoints=web"
      - "traefik.http.routers.teams.rule=Host(`teams.dev.neuvy.eu`)"
      - "traefik.http.routers.teams.service=teams"
      - "traefik.http.services.teams.loadbalancer.server.port=80"
      - "traefik.http.routers.teams.middlewares=my-jwt-validation-middleware@file"
  db:
    container_name: fastapi_db
    build: ./backend
    depends_on:
      mysql:
        condition: service_healthy
    command: uvicorn bdd.main:app --reload --workers 1 --host 0.0.0.0 --port 80
    volumes:
      - ./backend/bdd:/usr/src/bdd
    expose:
      - 80
    ports:
      - 8007:80
    environment:
      - ENVIRONMENT=dev
      - TESTING=0

  mysql:
    container_name: mysql
    image: mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=moviequest
      - MYSQL_USER=fastapi
      - MYSQL_PASSWORD=fastapi
    volumes:
      - ./backend/db/mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-uroot", "-ppass"]
      interval: 5s
      timeout: 3s
      retries: 20